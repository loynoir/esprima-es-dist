export declare function parse(code: string, options: any, delegate: any): any;
export declare function parseModule(code: string, options: any, delegate: any): any;
export declare function parseScript(code: string, options: any, delegate: any): any;
export declare function tokenize(code: string, options: any, delegate: any): any;
export { Syntax } from './syntax';
export declare const version = "4.0.0-dev";
declare const _default: {
    parse: typeof parse;
    parseModule: typeof parseModule;
    parseScript: typeof parseScript;
    tokenize: typeof tokenize;
    Syntax: {
        AssignmentExpression: string;
        AssignmentPattern: string;
        ArrayExpression: string;
        ArrayPattern: string;
        ArrowFunctionExpression: string;
        AwaitExpression: string;
        BlockStatement: string;
        BinaryExpression: string;
        BreakStatement: string;
        CallExpression: string;
        CatchClause: string;
        ChainExpression: string;
        ClassBody: string;
        ClassDeclaration: string;
        ClassExpression: string;
        ConditionalExpression: string;
        ContinueStatement: string;
        DoWhileStatement: string;
        DebuggerStatement: string;
        EmptyStatement: string;
        ExportAllDeclaration: string;
        ExportDefaultDeclaration: string;
        ExportNamedDeclaration: string;
        ExportSpecifier: string;
        ExpressionStatement: string;
        ForStatement: string;
        ForOfStatement: string;
        ForInStatement: string;
        FunctionDeclaration: string;
        FunctionExpression: string;
        Identifier: string;
        IfStatement: string;
        Import: string;
        ImportDeclaration: string;
        ImportDefaultSpecifier: string;
        ImportNamespaceSpecifier: string;
        ImportSpecifier: string;
        Literal: string;
        LabeledStatement: string;
        LogicalExpression: string;
        MemberExpression: string;
        MetaProperty: string;
        MethodDefinition: string;
        NewExpression: string;
        ObjectExpression: string;
        ObjectPattern: string;
        Program: string;
        Property: string;
        RestElement: string;
        ReturnStatement: string;
        SequenceExpression: string;
        SpreadElement: string;
        Super: string;
        SwitchCase: string;
        SwitchStatement: string;
        TaggedTemplateExpression: string;
        TemplateElement: string;
        TemplateLiteral: string;
        ThisExpression: string;
        ThrowStatement: string;
        TryStatement: string;
        UnaryExpression: string;
        UpdateExpression: string;
        VariableDeclaration: string;
        VariableDeclarator: string;
        WhileStatement: string;
        WithStatement: string;
        YieldExpression: string;
    };
    version: string;
};
export default _default;
